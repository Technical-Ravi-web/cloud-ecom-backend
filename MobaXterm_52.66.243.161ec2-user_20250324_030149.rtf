{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fmodern Consolas;}{\f1\fmodern\fcharset0 Consolas;}{\f2\fnil\fcharset129 Courier New;}}
{\colortbl ;\red20\green20\blue20;\red142\green142\blue142;\red16\green158\blue98;\red148\green146\blue12;\red170\green51\blue170;\red170\green64\blue64;\red56\green136\blue159;\red170\green85\blue85;\red9\green118\blue72;\red85\green85\blue85;\red143\green143\blue63;\red92\green92\blue92;}
\viewkind4\uc1\pard\f0\fs20 Authenticating with public key "Imported-Openssh-Key"\cf1\highlight2 
\par \cf0\highlight0     \u9484?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9488?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                 \cf3\f1\bullet  MobaXterm Personal Edition v25.1 \bullet\cf0\f0                  \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?               \cf4 (SSH client, X server and network tools)\cf0                \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                                                                      \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474? \u11166? SSH session to \cf5 ec2-user@52.66.243.161                    \cf0           \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  Direct SSH      :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  SSH compression :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  SSH-browser     :  \cf3\f0\u10003?\cf0                                              \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?\f1    \bullet  X11-forwarding  :  \cf6\f0\u10007?\cf0   (disabled or not supported by server)      \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474?                                                                      \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9474? \u11166? For more info, ctrl+click on \cf7\ul help\cf0\ulnone  or visit our \cf7\ul website\cf0\ulnone .            \u9474?\cf1\highlight2 
\par \cf0\highlight0     \u9492?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9496?\cf1\highlight2 
\par 
\par \cf0\highlight0    ,     #_\cf1\highlight2 
\par \cf0\highlight0    ~\\_  ####_        Amazon Linux 2023\cf1\highlight2 
\par \cf0\highlight0   ~~  \\_#####\\\cf1\highlight2 
\par \cf0\highlight0   ~~     \\###|\cf1\highlight2 
\par \cf0\highlight0   ~~       \\#/ ___   https://aws.amazon.com/linux/amazon-linux-2023\cf1\highlight2 
\par \cf0\highlight0    ~~       V~' '->\cf1\highlight2 
\par \cf0\highlight0     ~~~         /\cf1\highlight2 
\par \cf0\highlight0       ~~._.   _/\cf1\highlight2 
\par \cf0\highlight0          _/ _/\cf1\highlight2 
\par \cf0\highlight0        _/m/'\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$ sudo yum install -y aws-cli\cf1\highlight2 
\par \cf0\highlight0 Amazon Linux 2023 Kernel Livepatch repository                                                                                 117 kB/s |  14 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 Package awscli-2-2.17.18-1.amzn2023.0.1.noarch is already installed.\cf1\highlight2 
\par \cf0\highlight0 Dependencies resolved.\cf1\highlight2 
\par \cf0\highlight0 Nothing to do.\cf1\highlight2 
\par \cf0\highlight0 Complete!\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$ aws --version\cf1\highlight2 
\par \cf0\highlight0 aws-cli/2.17.18 Python/3.9.20 Linux/6.1.129-138.220.amzn2023.x86_64 source/x86_64.amzn.2023\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$ sudo yum install -y yum-utils\cf1\highlight2 
\par \cf0\highlight0 sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\cf1\highlight2 
\par \cf0\highlight0 sudo yum install -y terraform\cf1\highlight2 
\par \cf0\highlight0 Last metadata expiration check: 0:01:09 ago on Sun Mar 23 20:38:00 2025.\cf1\highlight2 
\par \cf0\highlight0 Package dnf-utils-4.3.0-13.amzn2023.0.5.noarch is already installed.\cf1\highlight2 
\par \cf0\highlight0 Dependencies resolved.\cf1\highlight2 
\par \cf0\highlight0 Nothing to do.\cf1\highlight2 
\par \cf0\highlight0 Complete!\cf1\highlight2 
\par \cf0\highlight0 Adding repo from: https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\cf1\highlight2 
\par \cf0\highlight0 Hashicorp Stable - x86_64                                                                                                      20 MB/s | 1.6 MB     00:00\cf1\highlight2 
\par \cf0\highlight0 Last metadata expiration check: 0:00:01 ago on Sun Mar 23 20:39:10 2025.\cf1\highlight2 
\par \cf0\highlight0 Dependencies resolved.\cf1\highlight2 
\par \cf0\highlight0 ==============================================================================================================================================================\cf1\highlight2 
\par \cf0\highlight0  Package                                Architecture                 Version                                          Repository                         Size\cf1\highlight2 
\par \cf0\highlight0 ==============================================================================================================================================================\cf1\highlight2 
\par \cf0\highlight0 Installing:\cf1\highlight2 
\par \cf0\highlight0  \cf3 terraform                             \cf0  x86_64                       1.11.2-1                                         hashicorp                          27 M\cf1\highlight2 
\par \cf0\highlight0 Installing dependencies:\cf1\highlight2 
\par \cf0\highlight0  \cf3 git                                   \cf0  x86_64                       2.47.1-1.amzn2023.0.2                            amazonlinux                        54 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 git-core                              \cf0  x86_64                       2.47.1-1.amzn2023.0.2                            amazonlinux                       4.7 M\cf1\highlight2 
\par \cf0\highlight0  \cf3 git-core-doc                          \cf0  noarch                       2.47.1-1.amzn2023.0.2                            amazonlinux                       2.8 M\cf1\highlight2 
\par \cf0\highlight0  \cf3 perl-Error                            \cf0  noarch                       1:0.17029-5.amzn2023.0.2                         amazonlinux                        41 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 perl-File-Find                        \cf0  noarch                       1.37-477.amzn2023.0.6                            amazonlinux                        26 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 perl-Git                              \cf0  noarch                       2.47.1-1.amzn2023.0.2                            amazonlinux                        42 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 perl-TermReadKey                      \cf0  x86_64                       2.38-9.amzn2023.0.2                              amazonlinux                        36 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 perl-lib                              \cf0  x86_64                       0.65-477.amzn2023.0.6                            amazonlinux                        15 k\cf1\highlight2 
\par 
\par \cf0\highlight0 Transaction Summary\cf1\highlight2 
\par \cf0\highlight0 ==============================================================================================================================================================\cf1\highlight2 
\par \cf0\highlight0 Install  9 Packages\cf1\highlight2 
\par 
\par \cf0\highlight0 Total download size: 35 M\cf1\highlight2 
\par \cf0\highlight0 Installed size: 123 M\cf1\highlight2 
\par \cf0\highlight0 Downloading Packages:\cf1\highlight2 
\par \cf0\highlight0 (1/9): git-2.47.1-1.amzn2023.0.2.x86_64.rpm                                                                                   1.4 MB/s |  54 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (2/9): perl-Error-0.17029-5.amzn2023.0.2.noarch.rpm                                                                           2.3 MB/s |  41 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (3/9): perl-File-Find-1.37-477.amzn2023.0.6.noarch.rpm                                                                        1.6 MB/s |  26 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (4/9): perl-Git-2.47.1-1.amzn2023.0.2.noarch.rpm                                                                              2.5 MB/s |  42 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (5/9): perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64.rpm                                                                        1.8 MB/s |  36 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (6/9): perl-lib-0.65-477.amzn2023.0.6.x86_64.rpm                                                                              883 kB/s |  15 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (7/9): git-core-2.47.1-1.amzn2023.0.2.x86_64.rpm                                                                               28 MB/s | 4.7 MB     00:00\cf1\highlight2 
\par \cf0\highlight0 (8/9): git-core-doc-2.47.1-1.amzn2023.0.2.noarch.rpm                                                                           12 MB/s | 2.8 MB     00:00\cf1\highlight2 
\par \cf0\highlight0 (9/9): terraform-1.11.2-1.x86_64.rpm                                                                                           28 MB/s |  27 MB     00:00\cf1\highlight2 
\par \cf0\highlight0 --------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\highlight2 
\par \cf0\highlight0 Total                                                                                                                          31 MB/s |  35 MB     00:01\cf1\highlight2 
\par \cf0\highlight0 Hashicorp Stable - x86_64                                                                                                     107 kB/s | 3.9 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 Importing GPG key 0xA621E701:\cf1\highlight2 
\par \cf0\highlight0  Userid     : "HashiCorp Security (HashiCorp Package Signing) <security+packaging@hashicorp.com>"\cf1\highlight2 
\par \cf0\highlight0  Fingerprint: 798A EC65 4E5C 1542 8C8E 42EE AA16 FCBC A621 E701\cf1\highlight2 
\par \cf0\highlight0  From       : https://rpm.releases.hashicorp.com/gpg\cf1\highlight2 
\par \cf0\highlight0 Key imported successfully\cf1\highlight2 
\par \cf0\highlight0 Running transaction check\cf1\highlight2 
\par \cf0\highlight0 Transaction check succeeded.\cf1\highlight2 
\par \cf0\highlight0 Running transaction test\cf1\highlight2 
\par \cf0\highlight0 Transaction test succeeded.\cf1\highlight2 
\par \cf0\highlight0 Running transaction\cf1\highlight2 
\par \cf0\highlight0   Preparing        :                                                                                                                                      1/1\cf1\highlight2 
\par \cf0\highlight0   Installing       : git-core-2.47.1-1.amzn2023.0.2.x86_64                                                                                                1/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : git-core-doc-2.47.1-1.amzn2023.0.2.noarch                                                                                            2/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : perl-lib-0.65-477.amzn2023.0.6.x86_64                                                                                                3/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64                                                                                          4/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : perl-File-Find-1.37-477.amzn2023.0.6.noarch                                                                                          5/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : perl-Error-1:0.17029-5.amzn2023.0.2.noarch                                                                                           6/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : perl-Git-2.47.1-1.amzn2023.0.2.noarch                                                                                                7/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : git-2.47.1-1.amzn2023.0.2.x86_64                                                                                                     8/9\cf1\highlight2 
\par \cf0\highlight0   Installing       : terraform-1.11.2-1.x86_64                                                                                                            9/9\cf1\highlight2 
\par \cf0\highlight0   Running scriptlet: terraform-1.11.2-1.x86_64                                                                                                            9/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : git-2.47.1-1.amzn2023.0.2.x86_64                                                                                                     1/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : git-core-2.47.1-1.amzn2023.0.2.x86_64                                                                                                2/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : git-core-doc-2.47.1-1.amzn2023.0.2.noarch                                                                                            3/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : perl-Error-1:0.17029-5.amzn2023.0.2.noarch                                                                                           4/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : perl-File-Find-1.37-477.amzn2023.0.6.noarch                                                                                          5/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : perl-Git-2.47.1-1.amzn2023.0.2.noarch                                                                                                6/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64                                                                                          7/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : perl-lib-0.65-477.amzn2023.0.6.x86_64                                                                                                8/9\cf1\highlight2 
\par \cf0\highlight0   Verifying        : terraform-1.11.2-1.x86_64                                                                                                            9/9\cf1\highlight2 
\par 
\par \cf0\highlight0 Installed:\cf1\highlight2 
\par \cf0\highlight0   git-2.47.1-1.amzn2023.0.2.x86_64                     git-core-2.47.1-1.amzn2023.0.2.x86_64                git-core-doc-2.47.1-1.amzn2023.0.2.noarch\cf1\highlight2 
\par \cf0\highlight0   perl-Error-1:0.17029-5.amzn2023.0.2.noarch           perl-File-Find-1.37-477.amzn2023.0.6.noarch          perl-Git-2.47.1-1.amzn2023.0.2.noarch\cf1\highlight2 
\par \cf0\highlight0   perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64          perl-lib-0.65-477.amzn2023.0.6.x86_64                terraform-1.11.2-1.x86_64\cf1\highlight2 
\par 
\par \cf0\highlight0 Complete!\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$ terraform -version\cf1\highlight2 
\par \cf0\highlight0 Terraform v1.11.2\cf1\highlight2 
\par \cf0\highlight0 on linux_amd64\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$ aws configure\cf1\highlight2 
\par \cf0\highlight0 AWS Access Key ID [None]: AKIAUMYCIDWZTR5MTHOY\cf1\highlight2 
\par \cf0\highlight0 AWS Secret Access Key [None]: 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\cf1\highlight2 
\par \cf0\highlight0 Default region name [None]: ap-south-1\cf1\highlight2 
\par \cf0\highlight0 Default output format [None]: json\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 ~]$ mkdir terraform-project\cf1\highlight2 
\par \cf0\highlight0 cd terraform-project\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform init\cf1\highlight2 
\par \cf0\highlight0\b Terraform initialized in an empty directory!\cf1\highlight2\b0 
\par 
\par \cf0\highlight0 The directory has no Terraform configuration files. You may begin working\cf1\highlight2 
\par \cf0\highlight0 with Terraform immediately by creating Terraform configuration files.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ nano main.tf\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform init\cf1\highlight2 
\par \cf0\highlight0\b Initializing the backend...\cf1\highlight2\b0 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0 Terraform encountered problems during initialisation, including problems\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  with the configuration, described below.\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  The Terraform configuration must be valid before initialization so that\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  Terraform can determine which modules and providers need to be installed.\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0\b Unclosed configuration block\cf1\highlight2\b0 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    on main.tf line 2, in provider "aws":\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0     2: provider "aws" \ul\{\cf1\highlight2\ulnone 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  There is no closing brace for this block before the end of the file. This may be caused by incorrect brace nesting elsewhere in this file.\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ nano main.tf\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ > main.tf\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ nano main.tf\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform init\cf1\highlight2 
\par \cf0\highlight0\b Initializing the backend...\cf1\highlight2\b0 
\par \cf0\highlight0\b Initializing provider plugins...\cf1\highlight2\b0 
\par \cf0\highlight0 - Finding latest version of hashicorp/aws...\cf1\highlight2 
\par \cf0\highlight0 - Installing hashicorp/aws v5.92.0...\cf1\highlight2 
\par \cf0\highlight0 - Installed hashicorp/aws v5.92.0 (signed by HashiCorp)\cf1\highlight2 
\par \cf0\highlight0 Terraform has created a lock file \b .terraform.lock.hcl\b0  to record the provider\cf1\highlight2 
\par \cf0\highlight0 selections it made above. Include this file in your version control repository\cf1\highlight2 
\par \cf0\highlight0 so that Terraform can guarantee to make the same selections by default when\cf1\highlight2 
\par \cf0\highlight0 you run "terraform init" in the future.\cf1\highlight2 
\par 
\par \cf3\highlight0 Terraform has been successfully initialized!\cf1\highlight2 
\par 
\par \cf9\highlight0 You may now begin working with Terraform. Try running "terraform plan" to see\cf1\highlight2 
\par \cf9\highlight0 any changes that are required for your infrastructure. All Terraform commands\cf1\highlight2 
\par \cf9\highlight0 should now work.\cf1\highlight2 
\par 
\par \cf9\highlight0 If you ever set or change modules or backend configuration for Terraform,\cf1\highlight2 
\par \cf9\highlight0 rerun this command to reinitialize your working directory. If you forget, other\cf1\highlight2 
\par \cf9\highlight0 commands will detect it and remind you to do so if necessary.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform plan\cf1\highlight2 
\par 
\par \cf0\highlight0 Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  create\cf1\highlight2 
\par 
\par \cf0\highlight0 Terraform will perform the following actions:\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_instance.web_server\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_instance" "web_server" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ami                                  = "ami-05c179eced2eb9b5b"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  associate_public_ip_address          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  availability_zone                    = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cpu_core_count                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cpu_threads_per_core                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  disable_api_stop                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  disable_api_termination              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ebs_optimized                        = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_primary_ipv6                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  get_password_data                    = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  host_id                              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  host_resource_group_arn              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  iam_instance_profile                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_initiated_shutdown_behavior = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_lifecycle                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_state                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_type                        = "t2.micro"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_address_count                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_addresses                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  key_name                             = "aaaaaaaaaaaaaaaa"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  monitoring                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  outpost_arn                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  password_data                        = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  placement_group                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  placement_partition_number           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  primary_network_interface_id         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_dns                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_ip                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  public_dns                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  public_ip                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  secondary_private_ips                = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  security_groups                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  source_dest_check                    = true\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  spot_instance_request_id             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  subnet_id                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                                 = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebServer"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                             = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebServer"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tenancy                              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data_base64                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data_replace_on_change          = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_security_group_ids               = (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  capacity_reservation_specification (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  cpu_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  ebs_block_device (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  enclave_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  ephemeral_block_device (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  instance_market_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  maintenance_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  metadata_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  network_interface (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  private_dns_name_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  root_block_device (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_internet_gateway.igw\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_internet_gateway" "igw" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags     = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "InternetGateway"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "InternetGateway"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_route_table.public_rt\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_route_table" "public_rt" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  propagating_vgws = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  route            = [\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_block                 = "0.0.0.0/0"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  gateway_id                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (11 unchanged attributes hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0         ]\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags             = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicRouteTable"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all         = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicRouteTable"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_route_table_association.public_assoc\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_route_table_association" "public_assoc" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  route_table_id = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  subnet_id      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_security_group.web_sg\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_security_group" "web_sg" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                    = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  description            = "Managed by Terraform"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  egress                 = [\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_blocks      = [\cf1\highlight2 
\par \cf0\highlight0                   \cf9 +\cf0  "0.0.0.0/0",\cf1\highlight2 
\par \cf0\highlight0                 ]\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  from_port        = 0\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  ipv6_cidr_blocks = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  prefix_list_ids  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  protocol         = "-1"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  security_groups  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  self             = false\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  to_port          = 0\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (1 unchanged attribute hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0         ]\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ingress                = [\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_blocks      = [\cf1\highlight2 
\par \cf0\highlight0                   \cf9 +\cf0  "0.0.0.0/0",\cf1\highlight2 
\par \cf0\highlight0                 ]\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  from_port        = 22\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  ipv6_cidr_blocks = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  prefix_list_ids  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  protocol         = "tcp"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  security_groups  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  self             = false\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  to_port          = 22\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (1 unchanged attribute hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_blocks      = [\cf1\highlight2 
\par \cf0\highlight0                   \cf9 +\cf0  "0.0.0.0/0",\cf1\highlight2 
\par \cf0\highlight0                 ]\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  from_port        = 80\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  ipv6_cidr_blocks = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  prefix_list_ids  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  protocol         = "tcp"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  security_groups  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  self             = false\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  to_port          = 80\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (1 unchanged attribute hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0         ]\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  name                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  name_prefix            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  revoke_rules_on_delete = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                   = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebSecurityGroup"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all               = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebSecurityGroup"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_subnet.public_subnet\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_subnet" "public_subnet" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  assign_ipv6_address_on_creation                = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  availability_zone                              = "ap-south-1a"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  availability_zone_id                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cidr_block                                     = "10.0.1.0/24"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_dns64                                   = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_resource_name_dns_a_record_on_launch    = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_resource_name_dns_aaaa_record_on_launch = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                                             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_cidr_block_association_id                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_native                                    = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  map_public_ip_on_launch                        = true\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id                                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_dns_hostname_type_on_launch            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                                           = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicSubnet"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                                       = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicSubnet"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id                                         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_vpc.main_vpc\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_vpc" "main_vpc" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cidr_block                           = "10.0.0.0/16"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  default_network_acl_id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  default_route_table_id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  default_security_group_id            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  dhcp_options_id                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_dns_hostnames                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_dns_support                   = true\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_network_address_usage_metrics = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_tenancy                     = "default"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_association_id                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_cidr_block                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_cidr_block_network_border_group = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  main_route_table_id                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id                             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                                 = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "MainVPC"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                             = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "MainVPC"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b Plan:\b0  7 to add, 0 to change, 0 to destroy.\cf1\highlight2 
\par 
\par \cf10\highlight0\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\cf1\highlight2 
\par 
\par \cf0\highlight0 Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform apply -auto-approve\cf1\highlight2 
\par 
\par \cf0\highlight0 Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  create\cf1\highlight2 
\par 
\par \cf0\highlight0 Terraform will perform the following actions:\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_instance.web_server\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_instance" "web_server" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ami                                  = "ami-05c179eced2eb9b5b"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  associate_public_ip_address          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  availability_zone                    = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cpu_core_count                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cpu_threads_per_core                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  disable_api_stop                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  disable_api_termination              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ebs_optimized                        = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_primary_ipv6                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  get_password_data                    = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  host_id                              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  host_resource_group_arn              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  iam_instance_profile                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_initiated_shutdown_behavior = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_lifecycle                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_state                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_type                        = "t2.micro"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_address_count                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_addresses                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  key_name                             = "aaaaaaaaaaaaaaaa"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  monitoring                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  outpost_arn                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  password_data                        = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  placement_group                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  placement_partition_number           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  primary_network_interface_id         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_dns                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_ip                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  public_dns                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  public_ip                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  secondary_private_ips                = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  security_groups                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  source_dest_check                    = true\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  spot_instance_request_id             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  subnet_id                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                                 = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebServer"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                             = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebServer"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tenancy                              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data_base64                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data_replace_on_change          = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_security_group_ids               = (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  capacity_reservation_specification (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  cpu_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  ebs_block_device (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  enclave_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  ephemeral_block_device (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  instance_market_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  maintenance_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  metadata_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  network_interface (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  private_dns_name_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  root_block_device (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_internet_gateway.igw\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_internet_gateway" "igw" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags     = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "InternetGateway"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "InternetGateway"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_route_table.public_rt\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_route_table" "public_rt" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  propagating_vgws = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  route            = [\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_block                 = "0.0.0.0/0"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  gateway_id                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (11 unchanged attributes hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0         ]\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags             = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicRouteTable"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all         = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicRouteTable"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_route_table_association.public_assoc\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_route_table_association" "public_assoc" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  route_table_id = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  subnet_id      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_security_group.web_sg\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_security_group" "web_sg" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                    = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  description            = "Managed by Terraform"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  egress                 = [\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_blocks      = [\cf1\highlight2 
\par \cf0\highlight0                   \cf9 +\cf0  "0.0.0.0/0",\cf1\highlight2 
\par \cf0\highlight0                 ]\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  from_port        = 0\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  ipv6_cidr_blocks = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  prefix_list_ids  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  protocol         = "-1"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  security_groups  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  self             = false\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  to_port          = 0\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (1 unchanged attribute hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0         ]\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ingress                = [\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_blocks      = [\cf1\highlight2 
\par \cf0\highlight0                   \cf9 +\cf0  "0.0.0.0/0",\cf1\highlight2 
\par \cf0\highlight0                 ]\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  from_port        = 22\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  ipv6_cidr_blocks = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  prefix_list_ids  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  protocol         = "tcp"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  security_groups  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  self             = false\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  to_port          = 22\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (1 unchanged attribute hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  \{\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  cidr_blocks      = [\cf1\highlight2 
\par \cf0\highlight0                   \cf9 +\cf0  "0.0.0.0/0",\cf1\highlight2 
\par \cf0\highlight0                 ]\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  from_port        = 80\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  ipv6_cidr_blocks = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  prefix_list_ids  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  protocol         = "tcp"\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  security_groups  = []\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  self             = false\cf1\highlight2 
\par \cf0\highlight0               \cf9 +\cf0  to_port          = 80\cf1\highlight2 
\par \cf0\highlight0                 \cf10 # (1 unchanged attribute hidden)\cf1\highlight2 
\par \cf0\highlight0             \},\cf1\highlight2 
\par \cf0\highlight0         ]\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  name                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  name_prefix            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  revoke_rules_on_delete = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                   = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebSecurityGroup"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all               = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebSecurityGroup"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_subnet.public_subnet\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_subnet" "public_subnet" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  assign_ipv6_address_on_creation                = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  availability_zone                              = "ap-south-1a"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  availability_zone_id                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cidr_block                                     = "10.0.1.0/24"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_dns64                                   = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_resource_name_dns_a_record_on_launch    = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_resource_name_dns_aaaa_record_on_launch = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                                             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_cidr_block_association_id                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_native                                    = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  map_public_ip_on_launch                        = true\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id                                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_dns_hostname_type_on_launch            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                                           = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicSubnet"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                                       = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "PublicSubnet"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_id                                         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_vpc.main_vpc\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_vpc" "main_vpc" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cidr_block                           = "10.0.0.0/16"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  default_network_acl_id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  default_route_table_id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  default_security_group_id            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  dhcp_options_id                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_dns_hostnames                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_dns_support                   = true\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_network_address_usage_metrics = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_tenancy                     = "default"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_association_id                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_cidr_block                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_cidr_block_network_border_group = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  main_route_table_id                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  owner_id                             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                                 = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "MainVPC"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                             = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "MainVPC"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b Plan:\b0  7 to add, 0 to change, 0 to destroy.\cf1\highlight2 
\par \cf0\highlight0\b aws_vpc.main_vpc: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_vpc.main_vpc: Creation complete after 1s [id=vpc-05392d92aafbf3ab0]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_subnet.public_subnet: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_security_group.web_sg: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_internet_gateway.igw: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_internet_gateway.igw: Creation complete after 1s [id=igw-049fdf8f3279ab629]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table.public_rt: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table.public_rt: Creation complete after 0s [id=rtb-01ba9a6d525c52ffe]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_security_group.web_sg: Creation complete after 2s [id=sg-067a2afa918fc2b3c]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_subnet.public_subnet: Still creating... [10s elapsed]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_subnet.public_subnet: Creation complete after 11s [id=subnet-067b78a00560ca7dc]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_instance.web_server: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table_association.public_assoc: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table_association.public_assoc: Creation complete after 0s [id=rtbassoc-028156325e5c25624]\cf1\highlight2\b0 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0\b creating EC2 Instance: operation error EC2: RunInstances, https response error StatusCode: 400, RequestID: b1d7f081-8a3f-4781-ace9-a64212146d2a, api error InvalidParameterCombination: The parameter groupName cannot be used with the parameter subnet\cf1\highlight2\b0 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    with aws_instance.web_server,\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    on main.tf line 87, in resource "aws_instance" "web_server":\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    87: resource "aws_instance" "web_server" \ul\{\cf1\highlight2\ulnone 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ nano main.tf\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform apply -auto-approve\cf1\highlight2 
\par \cf0\highlight0\b aws_vpc.main_vpc: Refreshing state... [id=vpc-05392d92aafbf3ab0]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_security_group.web_sg: Refreshing state... [id=sg-067a2afa918fc2b3c]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_subnet.public_subnet: Refreshing state... [id=subnet-067b78a00560ca7dc]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_internet_gateway.igw: Refreshing state... [id=igw-049fdf8f3279ab629]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table.public_rt: Refreshing state... [id=rtb-01ba9a6d525c52ffe]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table_association.public_assoc: Refreshing state... [id=rtbassoc-028156325e5c25624]\cf1\highlight2\b0 
\par 
\par \cf0\highlight0 Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  create\cf1\highlight2 
\par 
\par \cf0\highlight0 Terraform will perform the following actions:\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_instance.web_server\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_instance" "web_server" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ami                                  = "ami-05c179eced2eb9b5b"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  associate_public_ip_address          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  availability_zone                    = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cpu_core_count                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  cpu_threads_per_core                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  disable_api_stop                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  disable_api_termination              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ebs_optimized                        = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  enable_primary_ipv6                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  get_password_data                    = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  host_id                              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  host_resource_group_arn              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  iam_instance_profile                 = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_initiated_shutdown_behavior = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_lifecycle                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_state                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  instance_type                        = "t2.micro"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_address_count                   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ipv6_addresses                       = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  key_name                             = "aaaaaaaaaaaaaaaa"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  monitoring                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  outpost_arn                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  password_data                        = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  placement_group                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  placement_partition_number           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  primary_network_interface_id         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_dns                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  private_ip                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  public_dns                           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  public_ip                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  secondary_private_ips                = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  security_groups                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  source_dest_check                    = true\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  spot_instance_request_id             = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  subnet_id                            = "subnet-067b78a00560ca7dc"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                                 = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebServer"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                             = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name" = "WebServer"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tenancy                              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data                            = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data_base64                     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  user_data_replace_on_change          = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  vpc_security_group_ids               = [\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "sg-067a2afa918fc2b3c",\cf1\highlight2 
\par \cf0\highlight0         ]\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  capacity_reservation_specification (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  cpu_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  ebs_block_device (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  enclave_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  ephemeral_block_device (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  instance_market_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  maintenance_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  metadata_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  network_interface (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  private_dns_name_options (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  root_block_device (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b Plan:\b0  1 to add, 0 to change, 0 to destroy.\cf1\highlight2 
\par \cf0\highlight0\b aws_instance.web_server: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_instance.web_server: Still creating... [10s elapsed]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_instance.web_server: Creation complete after 13s [id=i-0635c49bb4585f771]\cf1\highlight2\b0 
\par 
\par \cf3\highlight0 Apply complete! Resources: 1 added, 0 changed, 0 destroyed.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ ssh -i aaaaaaaaaaaaaaaa.pem ec2-user@13.126.255.72\cf1\highlight2 
\par \cf0\highlight0 Warning: Identity file aaaaaaaaaaaaaaaa.pem not accessible: No such file or directory.\cf1\highlight2 
\par \cf0\highlight0 The authenticity of host '13.126.255.72 (13.126.255.72)' can't be established.\cf1\highlight2 
\par \cf0\highlight0 ED25519 key fingerprint is SHA256:CiDfAkEQB/xLZXgWpPTL3popikYBKLmXLT9ke22CnXM.\cf1\highlight2 
\par \cf0\highlight0 This key is not known by any other names\cf1\highlight2 
\par \cf0\highlight0 Are you sure you want to continue connecting (yes/no/[fingerprint])? yes\cf1\highlight2 
\par \cf0\highlight0 Warning: Permanently added '13.126.255.72' (ED25519) to the list of known hosts.\cf1\highlight2 
\par \cf0\highlight0 ec2-user@13.126.255.72: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ ll\cf1\highlight2 
\par \cf0\highlight0 total 32\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user  1809 Mar 23 21:05 main.tf\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user 14297 Mar 23 21:06 terraform.tfstate\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user  9497 Mar 23 21:06 terraform.tfstate.backup\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ vim aaaaaaaaaaaaaaaa.pem\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ ll\cf1\highlight2 
\par \cf0\highlight0 total 36\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user  1679 Mar 23 21:11 aaaaaaaaaaaaaaaa.pem\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user  1809 Mar 23 21:05 main.tf\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user 14297 Mar 23 21:06 terraform.tfstate\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user  9497 Mar 23 21:06 terraform.tfstate.backup\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ chmod 700 aaaaaaaaaaaaaaaa.pem\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ ll\cf1\highlight2 
\par \cf0\highlight0 total 36\cf1\highlight2 
\par \cf0\highlight0 -rwx------. 1 ec2-user ec2-user  1679 Mar 23 21:11 \cf3 aaaaaaaaaaaaaaaa.pem\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user  1809 Mar 23 21:05 main.tf\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user 14297 Mar 23 21:06 terraform.tfstate\cf1\highlight2 
\par \cf0\highlight0 -rw-r--r--. 1 ec2-user ec2-user  9497 Mar 23 21:06 terraform.tfstate.backup\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ ssh -i aaaaaaaaaaaaaaaa.pem ec2-user@13.126.255.72\cf1\highlight2 
\par \cf0\highlight0    ,     #_\cf1\highlight2 
\par \cf0\highlight0    ~\\_  ####_        Amazon Linux 2023\cf1\highlight2 
\par \cf0\highlight0   ~~  \\_#####\\\cf1\highlight2 
\par \cf0\highlight0   ~~     \\###|\cf1\highlight2 
\par \cf0\highlight0   ~~       \\#/ ___   https://aws.amazon.com/linux/amazon-linux-2023\cf1\highlight2 
\par \cf0\highlight0    ~~       V~' '->\cf1\highlight2 
\par \cf0\highlight0     ~~~         /\cf1\highlight2 
\par \cf0\highlight0       ~~._.   _/\cf1\highlight2 
\par \cf0\highlight0          _/ _/\cf1\highlight2 
\par \cf0\highlight0        _/m/'\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$ sudo yum update -y\cf1\highlight2 
\par \cf0\highlight0 sudo amazon-linux-extras enable nginx1\cf1\highlight2 
\par \cf0\highlight0 sudo yum install -y nginx\cf1\highlight2 
\par \cf0\highlight0 Amazon Linux 2023 Kernel Livepatch repository                                                                                 118 kB/s |  14 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 Dependencies resolved.\cf1\highlight2 
\par \cf0\highlight0 Nothing to do.\cf1\highlight2 
\par \cf0\highlight0 Complete!\cf1\highlight2 
\par \cf0\highlight0 sudo: amazon-linux-extras: command not found\cf1\highlight2 
\par \cf0\highlight0 Last metadata expiration check: 0:00:02 ago on Sun Mar 23 21:13:32 2025.\cf1\highlight2 
\par \cf0\highlight0 Dependencies resolved.\cf1\highlight2 
\par \cf0\highlight0 ==============================================================================================================================================================\cf1\highlight2 
\par \cf0\highlight0  Package                                   Architecture                 Version                                       Repository                         Size\cf1\highlight2 
\par \cf0\highlight0 ==============================================================================================================================================================\cf1\highlight2 
\par \cf0\highlight0 Installing:\cf1\highlight2 
\par \cf0\highlight0  \cf3 nginx                                    \cf0  x86_64                       1:1.26.3-1.amzn2023.0.1                       amazonlinux                        33 k\cf1\highlight2 
\par \cf0\highlight0 Installing dependencies:\cf1\highlight2 
\par \cf0\highlight0  \cf3 generic-logos-httpd                      \cf0  noarch                       18.0.0-12.amzn2023.0.3                        amazonlinux                        19 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 gperftools-libs                          \cf0  x86_64                       2.9.1-1.amzn2023.0.3                          amazonlinux                       308 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 libunwind                                \cf0  x86_64                       1.4.0-5.amzn2023.0.2                          amazonlinux                        66 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 nginx-core                               \cf0  x86_64                       1:1.26.3-1.amzn2023.0.1                       amazonlinux                       670 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 nginx-filesystem                         \cf0  noarch                       1:1.26.3-1.amzn2023.0.1                       amazonlinux                       9.6 k\cf1\highlight2 
\par \cf0\highlight0  \cf3 nginx-mimetypes                          \cf0  noarch                       2.1.49-3.amzn2023.0.3                         amazonlinux                        21 k\cf1\highlight2 
\par 
\par \cf0\highlight0 Transaction Summary\cf1\highlight2 
\par \cf0\highlight0 ==============================================================================================================================================================\cf1\highlight2 
\par \cf0\highlight0 Install  7 Packages\cf1\highlight2 
\par 
\par \cf0\highlight0 Total download size: 1.1 M\cf1\highlight2 
\par \cf0\highlight0 Installed size: 3.6 M\cf1\highlight2 
\par \cf0\highlight0 Downloading Packages:\cf1\highlight2 
\par \cf0\highlight0 (1/7): generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch.rpm                                                                  307 kB/s |  19 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (2/7): libunwind-1.4.0-5.amzn2023.0.2.x86_64.rpm                                                                              987 kB/s |  66 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (3/7): gperftools-libs-2.9.1-1.amzn2023.0.3.x86_64.rpm                                                                        4.0 MB/s | 308 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (4/7): nginx-1.26.3-1.amzn2023.0.1.x86_64.rpm                                                                                 1.9 MB/s |  33 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (5/7): nginx-filesystem-1.26.3-1.amzn2023.0.1.noarch.rpm                                                                      522 kB/s | 9.6 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (6/7): nginx-mimetypes-2.1.49-3.amzn2023.0.3.noarch.rpm                                                                       669 kB/s |  21 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 (7/7): nginx-core-1.26.3-1.amzn2023.0.1.x86_64.rpm                                                                            9.7 MB/s | 670 kB     00:00\cf1\highlight2 
\par \cf0\highlight0 --------------------------------------------------------------------------------------------------------------------------------------------------------------\cf1\highlight2 
\par \cf0\highlight0 Total                                                                                                                         6.4 MB/s | 1.1 MB     00:00\cf1\highlight2 
\par \cf0\highlight0 Running transaction check\cf1\highlight2 
\par \cf0\highlight0 Transaction check succeeded.\cf1\highlight2 
\par \cf0\highlight0 Running transaction test\cf1\highlight2 
\par \cf0\highlight0 Transaction test succeeded.\cf1\highlight2 
\par \cf0\highlight0 Running transaction\cf1\highlight2 
\par \cf0\highlight0   Preparing        :                                                                                                                                      1/1\cf1\highlight2 
\par \cf0\highlight0   Running scriptlet: nginx-filesystem-1:1.26.3-1.amzn2023.0.1.noarch                                                                                      1/7\cf1\highlight2 
\par \cf0\highlight0   Installing       : nginx-filesystem-1:1.26.3-1.amzn2023.0.1.noarch                                                                                      1/7\cf1\highlight2 
\par \cf0\highlight0   Installing       : nginx-mimetypes-2.1.49-3.amzn2023.0.3.noarch                                                                                         2/7\cf1\highlight2 
\par \cf0\highlight0   Installing       : libunwind-1.4.0-5.amzn2023.0.2.x86_64                                                                                                3/7\cf1\highlight2 
\par \cf0\highlight0   Installing       : gperftools-libs-2.9.1-1.amzn2023.0.3.x86_64                                                                                          4/7\cf1\highlight2 
\par \cf0\highlight0   Installing       : nginx-core-1:1.26.3-1.amzn2023.0.1.x86_64                                                                                            5/7\cf1\highlight2 
\par \cf0\highlight0   Installing       : generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch                                                                                    6/7\cf1\highlight2 
\par \cf0\highlight0   Installing       : nginx-1:1.26.3-1.amzn2023.0.1.x86_64                                                                                                 7/7\cf1\highlight2 
\par \cf0\highlight0   Running scriptlet: nginx-1:1.26.3-1.amzn2023.0.1.x86_64                                                                                                 7/7\cf1\highlight2 
\par \cf0\highlight0   Verifying        : generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch                                                                                    1/7\cf1\highlight2 
\par \cf0\highlight0   Verifying        : gperftools-libs-2.9.1-1.amzn2023.0.3.x86_64                                                                                          2/7\cf1\highlight2 
\par \cf0\highlight0   Verifying        : libunwind-1.4.0-5.amzn2023.0.2.x86_64                                                                                                3/7\cf1\highlight2 
\par \cf0\highlight0   Verifying        : nginx-1:1.26.3-1.amzn2023.0.1.x86_64                                                                                                 4/7\cf1\highlight2 
\par \cf0\highlight0   Verifying        : nginx-core-1:1.26.3-1.amzn2023.0.1.x86_64                                                                                            5/7\cf1\highlight2 
\par \cf0\highlight0   Verifying        : nginx-filesystem-1:1.26.3-1.amzn2023.0.1.noarch                                                                                      6/7\cf1\highlight2 
\par \cf0\highlight0   Verifying        : nginx-mimetypes-2.1.49-3.amzn2023.0.3.noarch                                                                                         7/7\cf1\highlight2 
\par 
\par \cf0\highlight0 Installed:\cf1\highlight2 
\par \cf0\highlight0   generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch      gperftools-libs-2.9.1-1.amzn2023.0.3.x86_64      libunwind-1.4.0-5.amzn2023.0.2.x86_64\cf1\highlight2 
\par \cf0\highlight0   nginx-1:1.26.3-1.amzn2023.0.1.x86_64                   nginx-core-1:1.26.3-1.amzn2023.0.1.x86_64        nginx-filesystem-1:1.26.3-1.amzn2023.0.1.noarch\cf1\highlight2 
\par \cf0\highlight0   nginx-mimetypes-2.1.49-3.amzn2023.0.3.noarch\cf1\highlight2 
\par 
\par \cf0\highlight0 Complete!\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$ sudo systemctl start nginx\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$ sudo systemctl enable nginx\cf1\highlight2 
\par \cf0\highlight0 Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service \u8594? /usr/lib/systemd/system/nginx.service.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$ sudo systemctl status nginx\cf1\highlight2 
\par \cf3\highlight0\u9679?\cf0  nginx.service - The nginx HTTP and reverse proxy server\cf1\highlight2 
\par \cf0\highlight0      Loaded: loaded (/usr/lib/systemd/system/nginx.service; \cf3 enabled\cf0 ; preset: \cf11 disabled\cf0 )\cf1\highlight2 
\par \cf0\highlight0      Active: \cf3 active (running)\cf0  since Sun 2025-03-23 21:14:09 UTC; 56s ago\cf1\highlight2 
\par \cf0\highlight0    Main PID: 26031 (nginx)\cf1\highlight2 
\par \cf0\highlight0       Tasks: 2 (limit: 1111)\cf1\highlight2 
\par \cf0\highlight0      Memory: 2.4M\cf1\highlight2 
\par \cf0\highlight0         CPU: 40ms\cf1\highlight2 
\par \cf0\highlight0      CGroup: /system.slice/nginx.service\cf1\highlight2 
\par \cf0\highlight0              \u9500?\u9472?\cf12 26031 "nginx: master process /usr/sbin/nginx"\cf1\highlight2 
\par \cf0\highlight0              \u9492?\u9472?\cf12 26032 "nginx: worker process"\cf1\highlight2 
\par 
\par \cf0\highlight0 Mar 23 21:14:09 ip-10-0-1-182.ap-south-1.compute.internal systemd[1]: Starting nginx.service - The nginx HTTP and reverse proxy server...\cf1\highlight2 
\par \cf0\highlight0 Mar 23 21:14:09 ip-10-0-1-182.ap-south-1.compute.internal nginx[26029]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\cf1\highlight2 
\par \cf0\highlight0 Mar 23 21:14:09 ip-10-0-1-182.ap-south-1.compute.internal nginx[26029]: nginx: configuration file /etc/nginx/nginx.conf test is successful\cf1\highlight2 
\par \cf0\highlight0 Mar 23 21:14:09 ip-10-0-1-182.ap-south-1.compute.internal systemd[1]: Started nginx.service - The nginx HTTP and reverse proxy server.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$ sudo firewall-cmd --permanent --add-service=http\cf1\highlight2 
\par \cf0\highlight0 sudo firewall-cmd --permanent --add-service=https\cf1\highlight2 
\par \cf0\highlight0 sudo firewall-cmd --reload\cf1\highlight2 
\par \cf0\highlight0 sudo: firewall-cmd: command not found\cf1\highlight2 
\par \cf0\highlight0 sudo: firewall-cmd: command not found\cf1\highlight2 
\par \cf0\highlight0 sudo: firewall-cmd: command not found\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$ cd\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-10-0-1-182 ~]$ exit\cf1\highlight2 
\par \cf0\highlight0 logout\cf1\highlight2 
\par \cf0\highlight0 Connection to 13.126.255.72 closed.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ nano main.tf\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform init\cf1\highlight2 
\par \cf0\highlight0\b Initializing the backend...\cf1\highlight2\b0 
\par \cf0\highlight0\b Initializing provider plugins...\cf1\highlight2\b0 
\par \cf0\highlight0 - Reusing previous version of hashicorp/aws from the dependency lock file\cf1\highlight2 
\par \cf0\highlight0 - Using previously-installed hashicorp/aws v5.92.0\cf1\highlight2 
\par 
\par \cf3\highlight0 Terraform has been successfully initialized!\cf1\highlight2 
\par 
\par \cf9\highlight0 You may now begin working with Terraform. Try running "terraform plan" to see\cf1\highlight2 
\par \cf9\highlight0 any changes that are required for your infrastructure. All Terraform commands\cf1\highlight2 
\par \cf9\highlight0 should now work.\cf1\highlight2 
\par 
\par \cf9\highlight0 If you ever set or change modules or backend configuration for Terraform,\cf1\highlight2 
\par \cf9\highlight0 rerun this command to reinitialize your working directory. If you forget, other\cf1\highlight2 
\par \cf9\highlight0 commands will detect it and remind you to do so if necessary.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform plan\cf1\highlight2 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0\b Reference to undeclared resource\cf1\highlight2\b0 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    on main.tf line 109, in resource "aws_s3_bucket_public_access_block" "public_access":\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0   109:   bucket = \ul aws_s3_bucket.website_bucket\ulnone .id\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  A managed resource "aws_s3_bucket" "website_bucket" has not been declared in the root module.\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0\b Reference to undeclared resource\cf1\highlight2\b0 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    on main.tf line 119, in resource "aws_s3_bucket_policy" "website_policy":\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0   119:   bucket = \ul aws_s3_bucket.website_bucket\ulnone .id\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  A managed resource "aws_s3_bucket" "website_bucket" has not been declared in the root module.\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0\b Reference to undeclared resource\cf1\highlight2\b0 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    on main.tf line 128, in resource "aws_s3_bucket_policy" "website_policy":\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0   128:       "Resource": "arn:aws:s3:::$\{\ul aws_s3_bucket.website_bucket\ulnone .id\}/*"\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  A managed resource "aws_s3_bucket" "website_bucket" has not been declared in the root module.\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0\b Reference to undeclared resource\cf1\highlight2\b0 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    on main.tf line 137, in resource "aws_s3_bucket_website_configuration" "website_config":\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0   137:   bucket = \ul aws_s3_bucket.website_bucket\ulnone .id\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  A managed resource "aws_s3_bucket" "website_bucket" has not been declared in the root module.\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ nano main.tf\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform init\cf1\highlight2 
\par \cf0\highlight0\b Initializing the backend...\cf1\highlight2\b0 
\par \cf0\highlight0\b Initializing provider plugins...\cf1\highlight2\b0 
\par \cf0\highlight0 - Reusing previous version of hashicorp/aws from the dependency lock file\cf1\highlight2 
\par \cf0\highlight0 - Using previously-installed hashicorp/aws v5.92.0\cf1\highlight2 
\par 
\par \cf3\highlight0 Terraform has been successfully initialized!\cf1\highlight2 
\par 
\par \cf9\highlight0 You may now begin working with Terraform. Try running "terraform plan" to see\cf1\highlight2 
\par \cf9\highlight0 any changes that are required for your infrastructure. All Terraform commands\cf1\highlight2 
\par \cf9\highlight0 should now work.\cf1\highlight2 
\par 
\par \cf9\highlight0 If you ever set or change modules or backend configuration for Terraform,\cf1\highlight2 
\par \cf9\highlight0 rerun this command to reinitialize your working directory. If you forget, other\cf1\highlight2 
\par \cf9\highlight0 commands will detect it and remind you to do so if necessary.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform plan\cf1\highlight2 
\par \cf0\highlight0\b aws_vpc.main_vpc: Refreshing state... [id=vpc-05392d92aafbf3ab0]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_security_group.web_sg: Refreshing state... [id=sg-067a2afa918fc2b3c]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_internet_gateway.igw: Refreshing state... [id=igw-049fdf8f3279ab629]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_subnet.public_subnet: Refreshing state... [id=subnet-067b78a00560ca7dc]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table.public_rt: Refreshing state... [id=rtb-01ba9a6d525c52ffe]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_instance.web_server: Refreshing state... [id=i-0635c49bb4585f771]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table_association.public_assoc: Refreshing state... [id=rtbassoc-028156325e5c25624]\cf1\highlight2\b0 
\par 
\par \cf0\highlight0 Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  create\cf1\highlight2 
\par 
\par \cf0\highlight0 Terraform will perform the following actions:\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket.website_bucket\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket" "website_bucket" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  acceleration_status         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  acl                         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket                      = "my-ecommerce-static-site-bucket-123"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket_domain_name          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket_prefix               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket_regional_domain_name = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  force_destroy               = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  hosted_zone_id              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  object_lock_enabled         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  policy                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  region                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  request_payer               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                        = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Environment" = "Dev"\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name"        = "EcommerceWebsiteBucket"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                    = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Environment" = "Dev"\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name"        = "EcommerceWebsiteBucket"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_domain              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_endpoint            = (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  cors_rule (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  grant (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  lifecycle_rule (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  logging (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  object_lock_configuration (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  replication_configuration (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  server_side_encryption_configuration (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  versioning (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  website (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket_policy.website_policy\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket_policy" "website_policy" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  policy = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket_public_access_block.public_access\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket_public_access_block" "public_access" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  block_public_acls       = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  block_public_policy     = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ignore_public_acls      = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  restrict_public_buckets = false\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket_website_configuration.website_config\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket_website_configuration" "website_config" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  routing_rules    = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_domain   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_endpoint = (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  index_document \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  suffix = "index.html"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  routing_rule (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b Plan:\b0  4 to add, 0 to change, 0 to destroy.\cf1\highlight2 
\par 
\par \cf10\highlight0\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\cf1\highlight2 
\par 
\par \cf0\highlight0 Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$ terraform apply -auto-approve\cf1\highlight2 
\par \cf0\highlight0\b aws_vpc.main_vpc: Refreshing state... [id=vpc-05392d92aafbf3ab0]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_subnet.public_subnet: Refreshing state... [id=subnet-067b78a00560ca7dc]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_internet_gateway.igw: Refreshing state... [id=igw-049fdf8f3279ab629]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_security_group.web_sg: Refreshing state... [id=sg-067a2afa918fc2b3c]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table.public_rt: Refreshing state... [id=rtb-01ba9a6d525c52ffe]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_instance.web_server: Refreshing state... [id=i-0635c49bb4585f771]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_route_table_association.public_assoc: Refreshing state... [id=rtbassoc-028156325e5c25624]\cf1\highlight2\b0 
\par 
\par \cf0\highlight0 Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  create\cf1\highlight2 
\par 
\par \cf0\highlight0 Terraform will perform the following actions:\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket.website_bucket\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket" "website_bucket" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  acceleration_status         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  acl                         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  arn                         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket                      = "my-ecommerce-static-site-bucket-123"\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket_domain_name          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket_prefix               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket_regional_domain_name = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  force_destroy               = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  hosted_zone_id              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                          = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  object_lock_enabled         = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  policy                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  region                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  request_payer               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags                        = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Environment" = "Dev"\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name"        = "EcommerceWebsiteBucket"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  tags_all                    = \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Environment" = "Dev"\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  "Name"        = "EcommerceWebsiteBucket"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_domain              = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_endpoint            = (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  cors_rule (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  grant (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  lifecycle_rule (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  logging (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  object_lock_configuration (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  replication_configuration (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  server_side_encryption_configuration (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  versioning (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  website (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket_policy.website_policy\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket_policy" "website_policy" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id     = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  policy = (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket_public_access_block.public_access\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket_public_access_block" "public_access" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  block_public_acls       = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  block_public_policy     = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket                  = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id                      = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  ignore_public_acls      = false\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  restrict_public_buckets = false\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b   # aws_s3_bucket_website_configuration.website_config\b0  will be created\cf1\highlight2 
\par \cf0\highlight0   \cf9 +\cf0  resource "aws_s3_bucket_website_configuration" "website_config" \{\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  bucket           = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  id               = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  routing_rules    = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_domain   = (known after apply)\cf1\highlight2 
\par \cf0\highlight0       \cf9 +\cf0  website_endpoint = (known after apply)\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  index_document \{\cf1\highlight2 
\par \cf0\highlight0           \cf9 +\cf0  suffix = "index.html"\cf1\highlight2 
\par \cf0\highlight0         \}\cf1\highlight2 
\par 
\par \cf0\highlight0       \cf9 +\cf0  routing_rule (known after apply)\cf1\highlight2 
\par \cf0\highlight0     \}\cf1\highlight2 
\par 
\par \cf0\highlight0\b Plan:\b0  4 to add, 0 to change, 0 to destroy.\cf1\highlight2 
\par \cf0\highlight0\b aws_s3_bucket.website_bucket: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_s3_bucket.website_bucket: Creation complete after 2s [id=my-ecommerce-static-site-bucket-123]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_s3_bucket_public_access_block.public_access: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_s3_bucket_policy.website_policy: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_s3_bucket_website_configuration.website_config: Creating...\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_s3_bucket_website_configuration.website_config: Creation complete after 0s [id=my-ecommerce-static-site-bucket-123]\cf1\highlight2\b0 
\par \cf0\highlight0\b aws_s3_bucket_public_access_block.public_access: Creation complete after 0s [id=my-ecommerce-static-site-bucket-123]\cf1\highlight2\b0 
\par \cf6\highlight0\u9591?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0  \cf8 Error: \cf0\b putting S3 Bucket (my-ecommerce-static-site-bucket-123) Policy: operation error S3: PutBucketPolicy, https response error StatusCode: 403, RequestID: 6EBTHFM57KZ8AXE1, HostID: On/fZxDz6v1SV3pbtFtzqZpDeW+LTLbtuvrc1OxNcFBy6tLD7ZWQcDXD3o8rSTwT5HDUchL/ZZg=, api error AccessDenied: User: arn:aws:iam::302263049651:user/E-COMMERCEUSER is not authorized to perform: s3:PutBucketPolicy on resource: "arn:aws:s3:::my-ecommerce-static-site-bucket-123" because public policies are blocked by the BlockPublicPolicy block public access setting.\cf1\highlight2\b0 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    with aws_s3_bucket_policy.website_policy,\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0    on main.tf line 128, in resource "aws_s3_bucket_policy" "website_policy":\cf1\highlight2 
\par \cf6\highlight0\u9474?\cf0   128: resource "aws_s3_bucket_policy" "website_policy" \ul\{\cf1\highlight2\ulnone 
\par \cf6\highlight0\u9474?\cf1\highlight2 
\par \cf6\highlight0\u9589?\cf1\highlight2 
\par \cf0\highlight0 [ec2-user@ip-172-31-8-161 terraform-project]$\cf1\highlight2 
\par \cf6\highlight0 Network error: Software caused connection abort\cf1\highlight2 
\par 
\par \cf10\highlight0\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\u9472?\cf1\highlight2 
\par 
\par \cf6\highlight0 Session stopped\cf1\highlight2 
\par \cf0\highlight0     - Press \cf5 <Return>\cf0  to exit tab\cf1\highlight2 
\par \cf0\highlight0     - Press \cf5 R\cf0  to restart session\cf1\highlight2 
\par \cf0\highlight0     - Press \cf5 S\cf0  to save terminal output to file\cf1\highlight2 
\par \pard\cf0\highlight0\f2\fs16 
\par }
 